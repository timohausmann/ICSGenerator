<?php

namespace ProcessWire;

class IcsGenerator extends WireData implements Module {

    public static function getModuleInfo() {
        return array(
            'title' => 'ICS Generator',
            'summary' => 'This module can generate ICS files.',
            'author' => 'Timo Hausmann',
            'version' => '130',
            'autoload' => false,
            'requires' => array(
                'PHP>=5.0.0',
                'ProcessWire>=3.0.0',
            ),
            'icon' => 'calendar',
        );
    }

    public function init() {
        require_once(__DIR__ . '/ICS.php');
        $this->set('events', new WireArray());
    }

    public function getDefaultEvent() {
        return [
            'timezone' => new \DateTimeZone(date_default_timezone_get()),
            'dtstart' => 'now',
            'dtend' => 'now + 60 minutes',
            'summary' => 'ICS Calendar File',
            'description' => '',
            'location' => '',
            'url' => '',
            'rrule' => '',
        ];
    }

    public function getICS() {

        return new \ICS($this->events);
    }

    public function getString() {
        $ics = $this->getICS();
        return $ics->to_string();
    }

    public function getFile() {

        $str = $this->getString();

        $filepath = $this->getTempFilepath();
        file_put_contents($filepath, $str);

        return $filepath;
    }

    public function getFileByID($id = '') {

        if ($id == '') throw new WireException('No ID given');

        $filepath = $this->getTempFilepath("ics-{$id}.ics");

        // if the file has already been generated, return it
        if (file_exists($filepath)) {
            return $filepath;
        }

        $str = $this->getString();
        file_put_contents($filepath, $str);

        return $filepath;
    }

    private function getTempFilepath($filename = null) {

        if ($filename === null) {
            $filename = 'ics-' . time() . '-' . mt_rand() . '.ics';
        }

        $tempDir = wire()->files->tempDir('icsgenerator');
        return $tempDir->get() . $filename;
    }
}
